plugins {
    id 'java'
}

repositories {
    mavenCentral()
}

// application {
//     // Define the main class for the application.
//     mainClass = 'qtriptest.App'
// }

dependencies {
    implementation group: 'io.github.bonigarcia', name: 'webdrivermanager', version: '5.5.3'
    implementation group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '4.0.0-alpha-1'
    testImplementation 'org.testng:testng:7.3.0'


    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.17.2'

    // https://mvnrepository.com/artifact/org.apache.poi/poi
    implementation group: 'org.apache.poi', name: 'poi', version: '5.2.2'

    // https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml
    implementation group: 'org.apache.poi', name: 'poi-ooxml', version: '5.2.2'
    
    // https://mvnrepository.com/artifact/com.aventstack/extentreports
    implementation group: 'com.aventstack', name: 'extentreports', version: '5.0.8'

   // https://mvnrepository.com/artifact/log4j/log4j
    implementation group: 'log4j', name: 'log4j', version: '1.2.17'




}

// Additional config for Crio workspace
// buildDir = '/tmp/external_build'

// task startScript(type:Exec) {
//     commandLine '../selenium-run.sh'
// }

// run.dependsOn startScript

// test.dependsOn startScript

test {
    useTestNG() {
        useDefaultListeners = true // generates the test report
        suites 'src/test/java/qtriptest/testng.xml'
        // suites 'src/test/java/qtriptest/testng_parallel.xml'  
    }


    afterSuite { desc, result ->
            if (!desc.parent) {
                println "\nTEST RESULT: ${result.resultType}"
                println "TEST SUMMARY: RAN ${result.testCount} TESTS, " +
                        "${result.successfulTestCount} SUCCEEDED, " +
                        "${result.failedTestCount} FAILED, " +
                        "${result.skippedTestCount} SKIPPED"
            }
    }

    testLogging {
		events "PASSED", "SKIPPED", "FAILED", "STANDARD_OUT", "STANDARD_ERROR"
        exceptionFormat = 'full'

        // Optionally do:
        showStackTraces = true
	}

    testLogging.showStandardStreams = true
    test.outputs.upToDateWhen {false}

}